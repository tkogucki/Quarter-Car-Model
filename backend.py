import pandas as pd

g = 32.2

# returns value of index series generated by pandas
def l(df, i, string):
    ind = df.index
    return df.loc[ind[i], string]

# vehicle parameter class
class vehicle:
    # import function for class
    def __init__(self,df, file):
        df = df.set_index('Parameter')
        self.file = file
        self.front = vehicle.axles(df, 'front', self)
        self.rear = vehicle.axles(df, 'rear', self)
    # sublass for the parameters on each axle
    class axles:
        def __init__(self, df, axle, car):
            v = 'Value'
            if axle == 'front':
                self.kt = l(df, 1, v) * 12
                self.k = l(df, 2,v) * 12
                self.damp = vehicle.damper(car, l(df, 3, v))
                self.usprung = l(df, 5, v) / g
                self.sprung = l(df, 7, v) / g
            elif axle == 'rear':
                self.kt = l(df, 1, v) * 12
                self.k = l(df, 3,v) * 12
                self.damp = vehicle.damper(car, l(df, 4, v))
                self.usprung = l(df, 6, v) / g
                self.sprung = l(df, 8, v) / g

    # sub class of vehicle that describes the dampers
    class damper:
        # takes in input of car class, and targeted sheet for extraction of data
        def __init__(self, car, damp_val):
            pd_damper = pd.read_excel(car.file, header = 0, sheet_name = damp_val)
            self.speed = pd_damper['Speed'] * 1/12
            self.force = pd_damper['Force']
            self.length = self.speed.size
            slope_top = self.force.iloc[self.length - 1] - self.force.iloc[self.length - 2]
            slope_bottom = self.speed.iloc[self.length - 1] - self.speed.iloc[self.length - 2]
            self.slope = slope_top/slope_bottom
            # maximum allowable damping force
            self.max_damp = self.slope * (1.2 * self.speed.iloc[self.length - 1] - self.speed.iloc[self.length - 1])
            


# generation of a vehicle
def vehicle_generator(file):
    param_df = pd.read_excel(file, header = 0, sheet_name = 'Driver')
    car = vehicle(param_df, file)
    return car

# write your test code here and execute
if __name__ == '__main__':
    car = vehicle_generator('driver.xlsx')
    print(car.rear.usprung)
    print(car.front.damp.speed)
    print(car.front.k)
    length = car.front.damp.length
    print(car.front.damp.speed.iloc[length-1])